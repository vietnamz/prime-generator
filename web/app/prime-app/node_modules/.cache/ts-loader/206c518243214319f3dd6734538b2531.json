{"remainingRequest":"/Users/delgemoon/workspace/stably/prime-generator/prime-app/node_modules/babel-loader/lib/index.js!/Users/delgemoon/workspace/stably/prime-generator/prime-app/node_modules/ts-loader/index.js??ref--14-2!/Users/delgemoon/workspace/stably/prime-generator/prime-app/node_modules/eslint-loader/index.js??ref--13-0!/Users/delgemoon/workspace/stably/prime-generator/prime-app/src/utils/http-common.ts","dependencies":[{"path":"/Users/delgemoon/workspace/stably/prime-generator/prime-app/src/utils/http-common.ts","mtime":1597084864862},{"path":"/Users/delgemoon/workspace/stably/prime-generator/prime-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/delgemoon/workspace/stably/prime-generator/prime-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/delgemoon/workspace/stably/prime-generator/prime-app/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/delgemoon/workspace/stably/prime-generator/prime-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CnZhciBodHRwU2VydmljZSA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC8iLAogIGhlYWRlcnM6IHsKICAgICJDb250ZW50LXR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIKICB9Cn0pOyAvLyByZXF1ZXN0IGludGVyY2VwdG9yCgpodHRwU2VydmljZS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIC8vIC4uLgogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnIpIHsKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyKTsKfSk7IC8vIHJlc3BvbnNlIGludGVyY2VwdG9yCgpodHRwU2VydmljZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogIC8vIC4uLgogIHJldHVybiByZXNwb25zZTsKfSwgZnVuY3Rpb24gKGVycikgewogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnIpOwp9KTsKZXhwb3J0IGRlZmF1bHQgaHR0cFNlcnZpY2U7"},{"version":3,"sources":["/Users/delgemoon/workspace/stably/prime-generator/prime-app/node_modules/eslint-loader/index.js??ref--13-0!/Users/delgemoon/workspace/stably/prime-generator/prime-app/src/utils/http-common.ts"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,IAAM,WAAW,GAAG,KAAK,CAAC,MAAN,CAAa;AAC7B,EAAA,OAAO,EAAE,wBADoB;AAE7B,EAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAFoB,CAAb,CAApB,C,CAOA;;AACA,WAAW,CAAC,YAAZ,CAAyB,OAAzB,CAAiC,GAAjC,CAAqC,UAAA,MAAM,EAAG;AAC1C;AACA,SAAO,MAAP;AACH,CAHD,EAGG,UAAA,GAAG,EAAG;AACL,SAAO,OAAO,CAAC,MAAR,CAAe,GAAf,CAAP;AACH,CALD,E,CAOA;;AACA,WAAW,CAAC,YAAZ,CAAyB,QAAzB,CAAkC,GAAlC,CAAsC,UAAA,QAAQ,EAAG;AAC7C;AACA,SAAO,QAAP;AACH,CAHD,EAGG,UAAA,GAAG,EAAG;AACL,SAAO,OAAO,CAAC,MAAR,CAAe,GAAf,CAAP;AACH,CALD;AAOA,eAAe,WAAf","sourcesContent":["import axios from \"axios\";\n\nconst httpService = axios.create({\n    baseURL: \"http://localhost:8080/\",\n    headers: {\n        \"Content-type\": \"application/json\"\n    }\n});\n\n// request interceptor\nhttpService.interceptors.request.use(config => {\n    // ...\n    return config\n}, err => {\n    return Promise.reject(err)\n})\n\n// response interceptor\nhttpService.interceptors.response.use(response => {\n    // ...\n    return response\n}, err => {\n    return Promise.reject(err)\n})\n\nexport default httpService\n"],"sourceRoot":""}]}